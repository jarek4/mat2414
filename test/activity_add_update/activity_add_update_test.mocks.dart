// Mocks generated by Mockito 5.4.0 from annotations
// in mat2414/test/activity_add_update/activity_add_update_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i3;

import 'package:mat2414/src/activity_add_update/add_update_state.dart' as _i8;
import 'package:mat2414/src/data/models/activity/activity.dart' as _i6;
import 'package:mat2414/src/data/models/user/user.dart' as _i2;
import 'package:mat2414/src/data/repositories/activities_repository.dart'
    as _i4;
import 'package:mat2414/src/data/repositories/user_repository.dart' as _i7;
import 'package:mat2414/src/localization/locale_notifier.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_1 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_2 extends _i1.SmartFake implements _i3.Locale {
  _FakeLocale_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ActivitiesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivitiesRepo extends _i1.Mock implements _i4.ActivitiesRepository {
  @override
  _i5.Future<int> create(_i6.Activity? item) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [item],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> delete(int? itemId) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [itemId],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<List<_i6.Activity>> getForADay(
    int? year,
    int? month,
    int? day,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForADay,
          [
            year,
            month,
            day,
          ],
        ),
        returnValue: _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
      ) as _i5.Future<List<_i6.Activity>>);
  @override
  _i5.Future<List<_i6.Activity>> getForAMonth(
    int? year,
    int? month,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForAMonth,
          [
            year,
            month,
          ],
        ),
        returnValue: _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
      ) as _i5.Future<List<_i6.Activity>>);
  @override
  _i5.Future<List<_i6.Activity>> getForAServiceYear(String? serviceYear) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForAServiceYear,
          [serviceYear],
        ),
        returnValue: _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
      ) as _i5.Future<List<_i6.Activity>>);
  @override
  _i5.Future<List<_i6.Activity>> readAll() => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Activity>>.value(<_i6.Activity>[]),
      ) as _i5.Future<List<_i6.Activity>>);
  @override
  _i5.Future<_i6.Activity?> readSingle(int? id) => (super.noSuchMethod(
        Invocation.method(
          #readSingle,
          [id],
        ),
        returnValue: _i5.Future<_i6.Activity?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.Activity?>.value(),
      ) as _i5.Future<_i6.Activity?>);
  @override
  _i5.Future<int> update(_i6.Activity? item) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [item],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Stream<List<_i6.Activity>> watch3recent() => (super.noSuchMethod(
        Invocation.method(
          #watch3recent,
          [],
        ),
        returnValue: _i5.Stream<List<_i6.Activity>>.empty(),
        returnValueForMissingStub: _i5.Stream<List<_i6.Activity>>.empty(),
      ) as _i5.Stream<List<_i6.Activity>>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepo extends _i1.Mock implements _i7.UserRepository {
  @override
  _i2.User get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeUser_0(
          this,
          Invocation.getter(#user),
        ),
        returnValueForMissingStub: _FakeUser_0(
          this,
          Invocation.getter(#user),
        ),
      ) as _i2.User);
  @override
  _i5.Future<void> update(_i2.User? user) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [user],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AddUpdateState].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddUpdateState extends _i1.Mock implements _i8.AddUpdateState {
  @override
  _i8.AddUpdateStateStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i8.AddUpdateStateStatus.error,
        returnValueForMissingStub: _i8.AddUpdateStateStatus.error,
      ) as _i8.AddUpdateStateStatus);
  @override
  _i8.AddUpdateErrorCode get errorCode => (super.noSuchMethod(
        Invocation.getter(#errorCode),
        returnValue: _i8.AddUpdateErrorCode.isEmpty,
        returnValueForMissingStub: _i8.AddUpdateErrorCode.isEmpty,
      ) as _i8.AddUpdateErrorCode);
  @override
  int get userMinutesMultiplayer => (super.noSuchMethod(
        Invocation.getter(#userMinutesMultiplayer),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  bool get areLDCHours => (super.noSuchMethod(
        Invocation.getter(#areLDCHours),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  int get h => (super.noSuchMethod(
        Invocation.getter(#h),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  DateTime get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: _FakeDateTime_1(
          this,
          Invocation.getter(#date),
        ),
        returnValueForMissingStub: _FakeDateTime_1(
          this,
          Invocation.getter(#date),
        ),
      ) as DateTime);
  @override
  int get min => (super.noSuchMethod(
        Invocation.getter(#min),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  int get placements => (super.noSuchMethod(
        Invocation.getter(#placements),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  String get remarks => (super.noSuchMethod(
        Invocation.getter(#remarks),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  int get returns => (super.noSuchMethod(
        Invocation.getter(#returns),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  bool get userWantLDCButton => (super.noSuchMethod(
        Invocation.getter(#userWantLDCButton),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get showRemarksInput => (super.noSuchMethod(
        Invocation.getter(#showRemarksInput),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isUpdateMode => (super.noSuchMethod(
        Invocation.getter(#isUpdateMode),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  int get video => (super.noSuchMethod(
        Invocation.getter(#video),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void onLDCHoursChange() => super.noSuchMethod(
        Invocation.method(
          #onLDCHoursChange,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addRemarksRequest() => super.noSuchMethod(
        Invocation.method(
          #addRemarksRequest,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onHoursChange(int? value) => super.noSuchMethod(
        Invocation.method(
          #onHoursChange,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setDate(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #setDate,
          [date],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onMinutesChange(int? value) => super.noSuchMethod(
        Invocation.method(
          #onMinutesChange,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPlacements(int? value) => super.noSuchMethod(
        Invocation.method(
          #setPlacements,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setReturnVisits(int? value) => super.noSuchMethod(
        Invocation.method(
          #setReturnVisits,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setVideoShowings(int? value) => super.noSuchMethod(
        Invocation.method(
          #setVideoShowings,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void remarksOnChange(String? value) => super.noSuchMethod(
        Invocation.method(
          #remarksOnChange,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i6.Activity?> onSaveRequest() => (super.noSuchMethod(
        Invocation.method(
          #onSaveRequest,
          [],
        ),
        returnValue: _i5.Future<_i6.Activity?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.Activity?>.value(),
      ) as _i5.Future<_i6.Activity?>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ILocaleNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockILocaleNotifier extends _i1.Mock implements _i9.ILocaleNotifier {
  @override
  _i3.Locale get currentLocale => (super.noSuchMethod(
        Invocation.getter(#currentLocale),
        returnValue: _FakeLocale_2(
          this,
          Invocation.getter(#currentLocale),
        ),
        returnValueForMissingStub: _FakeLocale_2(
          this,
          Invocation.getter(#currentLocale),
        ),
      ) as _i3.Locale);
  @override
  List<_i3.Locale> get supportedLocales => (super.noSuchMethod(
        Invocation.getter(#supportedLocales),
        returnValue: <_i3.Locale>[],
        returnValueForMissingStub: <_i3.Locale>[],
      ) as List<_i3.Locale>);
  @override
  void update(
    List<_i3.Locale>? supported,
    _i3.Locale? locale,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            supported,
            locale,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
